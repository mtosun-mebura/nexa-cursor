name: Deploy to Production

on:
  push:
    branches: [ main ]  # Verander naar gewenste branch
  pull_request:
    types: [closed]
    branches: [ main ]  # Verander naar gewenste branch
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted  # Changed from ubuntu-latest to run on your server
    # Only run if PR was merged (not just closed)
    if: github.event.pull_request.merged == true || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Create backup and pull latest code
      run: |
        # Create backup of current deployment
        if [ -d "/var/www/nexa" ]; then
          sudo cp -r /var/www/nexa /var/www/nexa-backup-$(date +%Y%m%d-%H%M%S)
        fi
        
        # Create deployment directory if it doesn't exist
        sudo mkdir -p /var/www/nexa
        sudo chown -R $USER:$USER /var/www/nexa
        
        # Git pull latest changes if repository exists
        if [ -d "/var/www/nexa/.git" ]; then
          echo "Git repository found, pulling latest changes..."
          cd /var/www/nexa
          git fetch origin
          git reset --hard origin/main
          git clean -fd
          echo "Git pull completed successfully!"
        else
          echo "Copying files from checkout..."
          sudo cp -r $GITHUB_WORKSPACE/* /var/www/nexa/
        fi
          
    - name: Deploy Laravel application
      run: |
        cd /var/www/nexa/backend
          
          # Create necessary Laravel directories
          mkdir -p /var/www/nexa/backend/bootstrap/cache
          mkdir -p /var/www/nexa/backend/storage/framework/{cache,sessions,views}
          mkdir -p /var/www/nexa/backend/storage/logs
          
          # Set proper ownership and permissions
          sudo chown -R www-data:www-data /var/www/nexa/backend/storage /var/www/nexa/backend/bootstrap/cache
          sudo chmod -R 775 /var/www/nexa/backend/storage /var/www/nexa/backend/bootstrap/cache
          
          # Install/update Composer dependencies
          composer install --no-dev --optimize-autoloader --no-interaction
          
          # Install NPM dependencies and build assets
          npm ci
          npm run build
          
          # Clear Laravel caches
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          
          # Run database migrations (if needed)
          php artisan migrate --force
          
    - name: Restart services
      run: |
        # Restart web server
        sudo systemctl reload nginx
        
        # Detect PHP version and restart appropriate service
        if systemctl is-active --quiet php8.2-fpm; then
          sudo systemctl reload php8.2-fpm
        elif systemctl is-active --quiet php8.1-fpm; then
          sudo systemctl reload php8.1-fpm
        elif systemctl is-active --quiet php8.0-fpm; then
          sudo systemctl reload php8.0-fpm
        fi
        
    - name: Verify deployment
      run: |
        # Check if application is accessible
        curl -f http://localhost || echo "Warning: Application not responding"
        echo "âœ… Deployment completed successfully!"
